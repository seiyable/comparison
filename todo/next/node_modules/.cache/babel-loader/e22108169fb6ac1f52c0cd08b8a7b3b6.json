{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/moeydesign/Documents/Seiya/sandbox/comparison/todo/next/components/TodoAdder/index.js\";\nimport React from 'react';\nimport styles from './TodoAdder.module.css';\n\nvar TodoAdder =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TodoAdder, _React$Component);\n\n  function TodoAdder(props) {\n    var _this;\n\n    _classCallCheck(this, TodoAdder);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TodoAdder).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onInputChange\", function (event) {\n      _this.setState({\n        newTodo: event.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onAddButtonClicked\", function () {\n      if (!_this.state.newTodo) return;\n\n      _this.props.addTodo(_this.state.newTodo);\n\n      _this.setState({\n        newTodo: ''\n      });\n    });\n\n    _this.state = {\n      newTodo: ''\n    };\n    return _this;\n  } // called when value in the input element is changed\n\n\n  _createClass(TodoAdder, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: styles.addTodoContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        id: \"add-todo-textinput\",\n        value: this.state.newTodo,\n        onChange: this.onInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.onAddButtonClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"ADD\"));\n    }\n  }]);\n\n  return TodoAdder;\n}(React.Component);\n\nexport { TodoAdder as default };","map":{"version":3,"sources":["/Users/moeydesign/Documents/Seiya/sandbox/comparison/todo/next/components/TodoAdder/index.js"],"names":["React","styles","TodoAdder","props","event","setState","newTodo","target","value","state","addTodo","addTodoContainer","onInputChange","onAddButtonClicked","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;IAEqBC,S;;;;;AACnB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;;AADiB,oEAQH,UAACC,KAAD,EAAW;AACzB,YAAKC,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAEF,KAAK,CAACG,MAAN,CAAaC;AADV,OAAd;AAGD,KAZkB;;AAAA,yEAgBE,YAAM;AACzB,UAAI,CAAC,MAAKC,KAAL,CAAWH,OAAhB,EAAyB;;AACzB,YAAKH,KAAL,CAAWO,OAAX,CAAmB,MAAKD,KAAL,CAAWH,OAA9B;;AACA,YAAKD,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,KAtBkB;;AAEjB,UAAKG,KAAL,GAAa;AACXH,MAAAA,OAAO,EAAE;AADE,KAAb;AAFiB;AAKlB,G,CAED;;;;;6BAiBS;AACP,aAAO;AAAK,QAAA,SAAS,EAAEL,MAAM,CAACU,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACL;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,oBAFL;AAGE,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWH,OAHpB;AAIE,QAAA,QAAQ,EAAE,KAAKM,aAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADK,EAML;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAE,KAAKC,kBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANK,CAAP;AAYD;;;;EAtCoCb,KAAK,CAACc,S;;SAAxBZ,S","sourcesContent":["import React from 'react';\nimport styles from './TodoAdder.module.css';\n\nexport default class TodoAdder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newTodo: '',\n    };\n  }\n\n  // called when value in the input element is changed\n  onInputChange = (event) => {\n    this.setState({\n      newTodo: event.target.value,\n    });\n  };\n\n  // called when ADD button is clicked\n  // fire add-todo event with the new todo string for the parent component\n  onAddButtonClicked = () => {\n    if (!this.state.newTodo) return;\n    this.props.addTodo(this.state.newTodo);\n    this.setState({\n      newTodo: '',\n    });\n  };\n\n  render() {\n    return <div className={styles.addTodoContainer}>\n      <input\n        type=\"text\"\n        id=\"add-todo-textinput\"\n        value={this.state.newTodo}\n        onChange={this.onInputChange}/>\n      <button\n        type=\"button\"\n        onClick={this.onAddButtonClicked}>\n        ADD\n      </button>\n    </div>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}